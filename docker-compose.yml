services:
  postgres:
    image: postgres:15-alpine
    container_name: resellio_postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  db-init:
    build:
      context: ./backend/db_init
    container_name: resellio_db_init
    environment:
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - PGPASSWORD=${DB_PASSWORD}
      - DB_RESET=true
    depends_on:
      postgres:
        condition: service_healthy

  auth-service:
    build:
      context: ./backend/user_auth_service
    container_name: resellio_auth_service
    ports:
      - "8000:8000"
    environment:
      - DB_URL=postgres
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - ADMIN_SECRET_KEY=${ADMIN_SECRET_KEY}
      - EMAIL_API_KEY=${EMAIL_API_KEY}
      - EMAIL_FROM_EMAIL=${EMAIL_FROM_EMAIL}
    depends_on:
      db-init:
        condition: service_completed_successfully

  events-service:
    build:
      context: ./backend/event_ticketing_service
    container_name: resellio_events_service
    ports:
      - "8001:8001"
    environment:
      - DB_URL=postgres
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - EMAIL_API_KEY=${EMAIL_API_KEY}
      - EMAIL_FROM_EMAIL=${EMAIL_FROM_EMAIL}
    depends_on:
      db-init:
        condition: service_completed_successfully

  api-gateway:
    build:
      context: ./backend/api_gateway
    container_name: resellio_api_gateway
    ports:
      - "8080:80"
    volumes:
      - ./backend/api_gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - auth-service
      - events-service
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  flutter-tester:
    profiles:
      - tests
    build:
      context: ./frontend
      dockerfile: test.Dockerfile
    container_name: resellio_flutter_tester
    environment:
      # This URL is used by the command to pass the correct backend address to the tests
      - API_BASE_URL=http://api-gateway/api
    depends_on:
      api-gateway:
        condition: service_healthy
    command: >
      sh -c "
        echo '--- Running Flutter tests ---' &&
        flutter test --dart-define=API_BASE_URL=$${API_BASE_URL}
      "

volumes:
  postgres-data:
