name: API Tests

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12' 

    - name: Create .env file for Docker Compose
      run: |
        echo "Creating root .env file for Docker Compose..."
        cp .env.template .env
        echo "✓ .env file created successfully."
        echo "--- .env content ---"
        cat .env
        echo "--------------------"

    - name: Start services with Docker Compose
      run: |
        # The .env file in the root directory will be automatically used by Docker Compose.
        docker compose up -d --build

    - name: Wait for API to be ready
      run: |
        echo "Waiting for API Gateway to become healthy..."
        # The API gateway has a /health endpoint. We poll it until it returns 200 OK.
        timeout 120s bash -c 'until curl -fs http://localhost:8080/health &>/dev/null; do echo "Waiting..."; sleep 5; done'
        echo "✓ API Gateway is ready!"

    - name: Show running service status
      run: |
        echo "--- Docker Compose Status ---"
        docker compose ps
        echo "---------------------------"
        echo "Pinging health check endpoint again:"
        curl -f http://localhost:8080/health

    - name: Run API tests
      run: ./scripts/actions/run_tests.bash local

    - name: Show logs on failure
      if: failure()
      run: |
        echo "::error::Tests failed. Dumping service logs..."
        echo "========================= Service Logs ========================="
        docker compose logs
        echo "================================================================"

    - name: Cleanup services
      if: always()
      run: |
        echo "Cleaning up Docker Compose services and volumes..."
        # The -v flag removes the named volume (postgres-data) to ensure a clean slate for the next run.
        docker compose down -v
        echo "✓ Cleanup complete."
